"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var NameFlipper = (function () {
  function NameFlipper() {
    _classCallCheck(this, NameFlipper);

    this.questionMark = document.querySelector(".cover-name__question-mark");
    this.name = document.querySelector(".cover-name__name");
    this.running = false;
  }

  _createClass(NameFlipper, [{
    key: "watch",
    value: function watch() {
      if (Modernizr.backgroundcliptext) {
        this.toggleQuestionMark();
      } else {
        return console.log("backgroundcliptext not supported");
      }
    }
  }, {
    key: "toggleQuestionMark",
    value: function toggleQuestionMark() {
      var _this = this;

      this.questionMark.classList.toggle("visibility-hidden");
      this.questionMark.classList.toggle("opacity-hidden");
      this.questionMark.addEventListener("mouseover", function () {
        _this.flipName();
      });
    }
  }, {
    key: "flipName",
    value: function flipName() {
      var _this2 = this;

      if (this.running == true) return false;

      this.running = true;

      fader.fadeOut(this.questionMark);
      this.flipWith("lu-han fer-noh");
      this.flipBackWith("LujÃ¡n Fernaud");

      window.setTimeout(function () {
        fader.fadeIn(_this2.questionMark);
        _this2.running = false;
      }, 4700);
    }
  }, {
    key: "flipWith",
    value: function flipWith(message) {
      var _this3 = this;

      this.name.classList.toggle("flip");

      window.setTimeout(function () {
        _this3.name.innerText = message;
      }, 500);

      window.setTimeout(function () {
        _this3.name.classList.toggle("flip");
      }, 1000);
    }
  }, {
    key: "flipBackWith",
    value: function flipBackWith(message) {
      var _this4 = this;

      window.setTimeout(function () {
        _this4.flipWith(message);
      }, 3700);
    }
  }]);

  return NameFlipper;
})();

var ChevronHider = (function () {
  function ChevronHider() {
    _classCallCheck(this, ChevronHider);

    this.chevron = document.querySelector(".front-cover__chevron-down");
  }

  _createClass(ChevronHider, [{
    key: "watch",
    value: function watch() {
      var _this5 = this;

      inView.threshold(0.9);

      inView(".front-cover").on("enter", function () {
        fader.fadeIn(_this5.chevron);
      }).on("exit", function () {
        fader.fadeOut(_this5.chevron);
      });
    }
  }]);

  return ChevronHider;
})();

var fader = {
  fadeIn: function fadeIn(element) {
    element.classList.remove("opacity-hidden");
  },
  fadeOut: function fadeOut(element) {
    element.classList.add("opacity-hidden");
  },
  toggle: function toggle(element) {
    element.classList.toggle("opacity-hidden");
  }
};

var LetsTalkAnimator = (function () {
  function LetsTalkAnimator() {
    _classCallCheck(this, LetsTalkAnimator);
  }

  _createClass(LetsTalkAnimator, [{
    key: "watch",
    value: function watch() {
      var letsTalk = new LetsTalkToggler();

      inView.threshold(0.9);

      inView(".back-cover").on("enter", function () {
        letsTalk.toggleAnimation();
        letsTalk.toggleHoverActive();
      }).on("exit", function () {
        letsTalk.toggleAnimation();
        letsTalk.toggleHoverActive();
      });
    }
  }]);

  return LetsTalkAnimator;
})();

var LetsTalkToggler = (function () {
  function LetsTalkToggler() {
    _classCallCheck(this, LetsTalkToggler);

    this.letsTalk = document.querySelector(".lets-talk-container");
    this.letsTalkButton = document.querySelector(".lets-talk");
    this.letsTalkText = document.querySelector(".lets-talk__text");
    this.letsTalkMail = document.querySelector(".lets-talk__mail");

    this.delayedToggler = new DelayedClassToggler();
  }

  _createClass(LetsTalkToggler, [{
    key: "toggle",
    value: function toggle() {
      var formIsOpen = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];

      this.toggleAnimation();
      this.toggleHoverActive(formIsOpen);
      this.toggleContainer();
    }
  }, {
    key: "toggleAnimation",
    value: function toggleAnimation() {
      this.letsTalkText.classList.toggle("lets-talk__text--paused");
      this.letsTalkMail.classList.toggle("lets-talk__mail--paused");
    }
  }, {
    key: "toggleHoverActive",
    value: function toggleHoverActive() {
      var formIsOpen = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];

      this.delayedToggler.toggle({
        element: this.letsTalkButton,
        klass: "lets-talk--hover-active",
        formIsOpen: formIsOpen
      });
    }
  }, {
    key: "toggleContainer",
    value: function toggleContainer() {
      this.letsTalk.classList.toggle("lets-talk-container--hidden");
    }
  }]);

  return LetsTalkToggler;
})();

var DelayedClassToggler = (function () {
  function DelayedClassToggler() {
    _classCallCheck(this, DelayedClassToggler);
  }

  _createClass(DelayedClassToggler, [{
    key: "toggle",
    value: function toggle(_ref) {
      var element = _ref.element;
      var klass = _ref.klass;
      var _ref$formIsOpen = _ref.formIsOpen;
      var formIsOpen = _ref$formIsOpen === undefined ? false : _ref$formIsOpen;

      if (formIsOpen) {
        element.classList.toggle(klass);
      } else {
        window.setTimeout(function () {
          element.classList.toggle(klass);
        }, 1000); // 1 second, same as CSS transition duration.
      }
    }
  }]);

  return DelayedClassToggler;
})();

var ContactFormToggler = (function () {
  function ContactFormToggler() {
    _classCallCheck(this, ContactFormToggler);

    this.formIsOpen = false;
    this.contactSection = document.querySelector(".contact-section-container");
    this.sectionOpener = document.querySelector(".lets-talk-link");
    this.sectionCloser = document.querySelector(".contact-section__close");
    this.sectionTogglers = [this.sectionOpener, this.sectionCloser];

    this.delayedToggler = new DelayedClassToggler();
    this.scrollToggler = new ScrollToggler();
    this.letsTalkToggler = new LetsTalkToggler();
  }

  _createClass(ContactFormToggler, [{
    key: "watch",
    value: function watch() {
      var _this6 = this;

      this.sectionTogglers.forEach(function (toggler) {
        toggler.addEventListener("click", function (event) {
          event.preventDefault();

          _this6.scrollToBottom();
          _this6.toggleContactSection();
        });
      });
    }
  }, {
    key: "scrollToBottom",
    value: function scrollToBottom() {
      document.querySelector(".scroll-to-back-cover").click();
    }
  }, {
    key: "toggleContactSection",
    value: function toggleContactSection() {
      this.formIsOpen = !this.formIsOpen; // Switch the boolean.

      this.toggleVisibility();
      this.toggleScroll();
      this.toggleLetsTalk();
      this.toggleContactForm();
    }
  }, {
    key: "toggleVisibility",
    value: function toggleVisibility() {
      this.delayedToggler.toggle({
        element: this.contactSection,
        klass: "visibility-hidden",
        formIsOpen: this.formIsOpen
      });
    }
  }, {
    key: "toggleScroll",
    value: function toggleScroll() {
      this.scrollToggler.toggle();
    }
  }, {
    key: "toggleLetsTalk",
    value: function toggleLetsTalk() {
      this.letsTalkToggler.toggle(this.formIsOpen);
    }
  }, {
    key: "toggleContactForm",
    value: function toggleContactForm() {
      this.contactSection.classList.toggle("contact-section-container--revealed");
    }
  }]);

  return ContactFormToggler;
})();

var ScrollToggler = (function () {
  function ScrollToggler() {
    _classCallCheck(this, ScrollToggler);

    this.html = document.getElementsByTagName("html")[0];
    this.body = document.body;
    this.backCover = document.querySelector(".back-cover");
  }

  _createClass(ScrollToggler, [{
    key: "toggle",
    value: function toggle() {
      this.html.classList.toggle("overflow-hidden");
      this.body.classList.toggle("overflow-hidden");
      this.backCover.classList.toggle("overflow-hidden");
    }
  }]);

  return ScrollToggler;
})();

new NameFlipper().watch();
new ChevronHider().watch();
new LetsTalkAnimator().watch();
new ContactFormToggler().watch();