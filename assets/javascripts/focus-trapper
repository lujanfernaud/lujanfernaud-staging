//= require vendor/inert.min

// Inert Documentation:
// https://github.com/wicg/inert

'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var FocusTrapper = (function () {
  function FocusTrapper() {
    _classCallCheck(this, FocusTrapper);
  }

  _createClass(FocusTrapper, [{
    key: 'run',
    value: function run() {
      inertElements = document.querySelectorAll('.inert');

      inertElements.forEach(function (element) {
        element.inert = true;
      });
    }
  }, {
    key: 'toggle',
    value: function toggle(element) {
      if (element.inert) {
        element.classList.remove('inert');
        element.inert = false;
      } else {
        element.classList.add('inert');
        element.inert = true;
      }
    }
  }]);

  return FocusTrapper;
})();