'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var NameFlipper = (function () {
  function NameFlipper() {
    _classCallCheck(this, NameFlipper);

    this.questionMark = document.querySelector('.cover-name__question-mark');
    this.name = document.querySelector('.cover-name__name');
    this.running = false;
  }

  _createClass(NameFlipper, [{
    key: 'watch',
    value: function watch() {
      if (Modernizr.backgroundcliptext) {
        this._toggleQuestionMark();
      } else {
        return console.log('backgroundcliptext not supported');
      }
    }

    // private

  }, {
    key: '_toggleQuestionMark',
    value: function _toggleQuestionMark() {
      var _this = this;

      this.questionMark.classList.toggle('visibility-hidden');
      this.questionMark.classList.toggle('opacity-hidden');
      this.questionMark.addEventListener('mouseover', function () {
        _this._flipName();
      });
    }
  }, {
    key: '_flipName',
    value: function _flipName() {
      var _this2 = this;

      if (this.running === true) return false;

      this.running = true;

      fader.fadeOut(this.questionMark);
      this._flipWith('lu-han fer-noh');
      this._flipBackWith('LujÃ¡n Fernaud');

      window.setTimeout(function () {
        fader.fadeIn(_this2.questionMark);
        _this2.running = false;
      }, 4700);
    }
  }, {
    key: '_flipWith',
    value: function _flipWith(message) {
      var _this3 = this;

      this.name.classList.toggle('flip');

      window.setTimeout(function () {
        _this3.name.innerText = message;
      }, 500);

      window.setTimeout(function () {
        _this3.name.classList.toggle('flip');
      }, 1000);
    }
  }, {
    key: '_flipBackWith',
    value: function _flipBackWith(message) {
      var _this4 = this;

      window.setTimeout(function () {
        _this4._flipWith(message);
      }, 3700);
    }
  }]);

  return NameFlipper;
})();